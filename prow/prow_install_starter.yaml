# This file contains Kubernetes YAML files for the most important prow
# components. Don't edit resources in this file. Instead, pull them out into
# their own files.
--- # hook 组件
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: prow
  name: hook
  labels:
    app: hook
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: hook
  template:
    metadata:
      labels:
        app: hook
    spec:
      serviceAccountName: "hook"
      terminationGracePeriodSeconds: 180
      containers:
        - name: hook
          image: gcr.io/k8s-prow/hook:v20211111-bce61c7c4a
          imagePullPolicy: Always
          args:
            - --dry-run=false
            - --config-path=/etc/config/config.yaml
            - --job-config-path=/etc/job-config
            - --github-token-path=/etc/github/oauth 
            - --github-endpoint=http://ghproxy
            - --github-endpoint=https://api.github.com
          ports:
            - name: http
              containerPort: 8888
            - name: metrics
              containerPort: 9090
          volumeMounts:
            - name: hmac
              mountPath: /etc/webhook
              readOnly: true
            - name: oauth
              mountPath: /etc/github
              readOnly: true
            - name: config
              mountPath: /etc/config
              readOnly: true
            - name: plugins
              mountPath: /etc/plugins
              readOnly: true
            - name: job-config
              mountPath: /etc/job-config
              readOnly: true
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 3
            periodSeconds: 3
          readinessProbe:
            httpGet:
              path: /healthz/ready
              port: 8081
            initialDelaySeconds: 10
            periodSeconds: 3
            timeoutSeconds: 600
      volumes:
        - name: hmac
          secret:
            secretName: hmac-token
        - name: oauth
          secret:
            secretName: oauth-token
        - name: config
          configMap:
            name: config
        - name: plugins
          configMap:
            name: plugins
        - name: job-config
          configMap:
            name: job-config
---
apiVersion: v1
kind: Service
metadata:
  namespace: prow
  name: hook
spec:
  selector:
    app: hook
  type: ClusterIP
  ports:
    - port: 8888
      targetPort: 8888
      name: http
    - port: 9090
      targetPort: 9090
      name: metrics
--- # sinker 组件
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: prow
  name: sinker
  labels:
    app: sinker
spec:
  selector:
    matchLabels:
      app: sinker
  replicas: 1
  template:
    metadata:
      labels:
        app: sinker
    spec:
      serviceAccountName: "sinker"
      containers:
        - name: sinker
          image: gcr.io/k8s-prow/sinker:v20211111-bce61c7c4a
          ports:
            - name: metrics
              containerPort: 9090
          args:
            - --config-path=/etc/config/config.yaml
            - --dry-run=false
          volumeMounts:
            - name: config
              mountPath: /etc/config
              readOnly: true
      volumes:
        - name: config
          configMap:
            name: config
---
apiVersion: v1
kind: Service
metadata:
  namespace: prow
  name: sinker
spec:
  selector:
    app: sinker
  type: ClusterIP
  ports:
    - port: 9090
      targetPort: 9090
      name: metrics
--- # deck 组件
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: prow
  name: deck
  labels:
    app: deck
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: deck
  template:
    metadata:
      labels:
        app: deck
    spec:
      serviceAccountName: "deck"
      terminationGracePeriodSeconds: 30
      containers:
        - name: deck
          image: gcr.io/k8s-prow/deck:v20211111-bce61c7c4a
          args:
            - --tide-url=http://tide/
            - --hook-url=http://hook:8888/plugin-help
            - --config-path=/etc/config/config.yaml
            - --job-config=/etc/job-config
            - --plugin-config=/etc/plugins/plugins.yaml
            - --spyglass=true
            - --rerun-creates-job
            - --s3-credentials-file=/etc/s3-credentials/service-account.json
            - --github-token-path=/etc/github/oauth
            - --github-endpoint=http://ghproxy
            - --github-endpoint=https://api.github.com
            - --github-graphql-endpoint=http://ghproxy/graphql                        
            - --oauth-url=/github-login
            - --github-oauth-config-file=/etc/githuboauth/secret
            - --cookie-secret=/etc/cookie/secret
          ports:
            - name: http
              containerPort: 8080
            - name: metrics
              containerPort: 9090
          volumeMounts:
            - name: oauth-config  #from github-oauth-config.yaml
              mountPath: /etc/githuboauth
              readOnly: true
            - name: cookie-secret #from cookie
              mountPath: /etc/cookie
              readOnly: true
            - name: oauth
              mountPath: /etc/github
              readOnly: true
            - name: config
              mountPath: /etc/config
              readOnly: true
            - name: plugins
              mountPath: /etc/plugins
              readOnly: true
            - name: s3-credentials
              mountPath: /etc/s3-credentials
              readOnly: true
            - name: job-config
              mountPath: /etc/job-config
              readOnly: true
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 3
            periodSeconds: 3
          readinessProbe:
            httpGet:
              path: /healthz/ready
              port: 8081
            initialDelaySeconds: 10
            periodSeconds: 3
            timeoutSeconds: 600
      volumes:
        - name: oauth-config
          secret:
            secretName: github-oauth-config
        - name: oauth
          secret:
            secretName: oauth-token
        - name: cookie-secret
          secret:
            secretName: cookie
        - name: config
          configMap:
            name: config
        - name: plugins
          configMap:
            name: plugins
        - name: s3-credentials
          secret:
            secretName: s3-credentials
        - name: job-config
          configMap:
            name: job-config
---
apiVersion: v1
kind: Service
metadata:
  namespace: prow
  name: deck
spec:
  selector:
    app: deck
  ports:
    - port: 80
      targetPort: 8080
      name: http
    - port: 9090
      targetPort: 9090
      name: metrics
--- # horologium 组件
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: prow
  name: horologium
  labels:
    app: horologium
spec:
  replicas: 1 # Do not scale up.
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: horologium
  template:
    metadata:
      labels:
        app: horologium
    spec:
      serviceAccountName: "horologium"
      terminationGracePeriodSeconds: 30
      containers:
        - name: horologium
          image: gcr.io/k8s-prow/horologium:v20211111-bce61c7c4a
          ports:
            - name: metrics
              containerPort: 9090
          args:
            - --config-path=/etc/config/config.yaml
            - --job-config-path=/etc/job-config
            - --dry-run=false
          volumeMounts:
            - name: config
              mountPath: /etc/config
              readOnly: true
            - name: job-config
              mountPath: /etc/job-config
              readOnly: true
      volumes:
        - name: config
          configMap:
            name: config
        - name: job-config
          configMap:
            name: job-config
---
apiVersion: v1
kind: Service
metadata:
  namespace: prow
  name: horologium
spec:
  selector:
    app: horologium
  type: ClusterIP
  ports:
    - port: 9090
      targetPort: 9090
      name: metrics
--- # tide 组件
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: prow
  name: tide
  labels:
    app: tide
spec:
  replicas: 1 # Do not scale up.
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: tide
  template:
    metadata:
      labels:
        app: tide
    spec:
      serviceAccountName: "tide"
      containers:
        - name: tide
          image: gcr.io/k8s-prow/tide:v20211111-bce61c7c4a
          args:
            - --dry-run=false
            - --config-path=/etc/config/config.yaml
            - --job-config-path=/etc/job-config
            - --github-token-path=/etc/github/oauth            
            - --github-endpoint=http://ghproxy
            - --github-endpoint=https://api.github.com
            - --github-graphql-endpoint=http://ghproxy/graphql
            - --s3-credentials-file=/etc/s3-credentials/service-account.json
            - --status-path=s3://aws-gcr-prow-logs/tide/tide-status
            - --history-uri=s3://aws-gcr-prow-logs/tide/tide-history.json
          ports:
            - name: http
              containerPort: 8888
            - name: metrics
              containerPort: 9090
          volumeMounts:
            - name: oauth
              mountPath: /etc/github
              readOnly: true
            - name: config
              mountPath: /etc/config
              readOnly: true
            - name: s3-credentials
              mountPath: /etc/s3-credentials
              readOnly: true
            - name: job-config
              mountPath: /etc/job-config
              readOnly: true
      volumes:
        - name: oauth
          secret:
            secretName: oauth-token
        - name: config
          configMap:
            name: config
        - name: s3-credentials
          secret:
            secretName: s3-credentials
        - name: job-config
          configMap:
            name: job-config
---
apiVersion: v1
kind: Service
metadata:
  namespace: prow
  name: tide
spec:
  selector:
    app: tide
  ports:
    - port: 80
      targetPort: 8888
      name: http
    - port: 9090
      targetPort: 9090
      name: metrics
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: statusreconciler
  namespace: prow
  labels:
    app: statusreconciler
spec:
  replicas: 1
  selector:
    matchLabels:
      app: statusreconciler
  template:
    metadata:
      labels:
        app: statusreconciler
    spec:
      serviceAccountName: statusreconciler
      terminationGracePeriodSeconds: 180
      containers:
        - name: statusreconciler
          image: gcr.io/k8s-prow/status-reconciler:v20211111-bce61c7c4a
          ports:
            - name: metrics
              containerPort: 9090
          args:
            - --dry-run=false
            - --continue-on-error=true
            - --plugin-config=/etc/plugins/plugins.yaml
            - --config-path=/etc/config/config.yaml
            - --job-config-path=/etc/job-config
            - --github-token-path=/etc/github/oauth
            - --github-endpoint=http://ghproxy
            - --github-endpoint=https://api.github.com
            - --s3-credentials-file=/etc/s3-credentials/service-account.json
            - --status-path=s3://aws-gcr-prow-logs/status-reconciler/status-reconciler-status
          volumeMounts:
            - name: oauth
              mountPath: /etc/github
              readOnly: true
            - name: config
              mountPath: /etc/config
              readOnly: true
            - name: job-config
              mountPath: /etc/job-config
              readOnly: true
            - name: plugins
              mountPath: /etc/plugins
              readOnly: true
            - name: s3-credentials
              mountPath: /etc/s3-credentials
              readOnly: true
      volumes:
        - name: oauth
          secret:
            secretName: oauth-token
        - name: config
          configMap:
            name: config
        - name: plugins
          configMap:
            name: plugins
        - name: s3-credentials
          secret:
            secretName: s3-credentials
        - name: job-config
          configMap:
            name: job-config
---
apiVersion: v1
kind: Service
metadata:
  namespace: prow
  name: statusreconciler
spec:
  selector:
    app: statusreconciler
  type: ClusterIP
  ports:
    - port: 9090
      targetPort: 9090
      name: metrics
---
apiVersion: v1
kind: Namespace
metadata:
  name: test-pods
---
kind: ServiceAccount
apiVersion: v1
metadata:
  namespace: prow
  name: "deck"
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: prow
  name: "deck"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: "deck"
subjects:
  - kind: ServiceAccount
    name: "deck"
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: test-pods
  name: "deck"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: "deck"
subjects:
  - kind: ServiceAccount
    name: "deck"
    namespace: prow
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: prow
  name: "deck"
rules:
  - apiGroups:
      - "prow.k8s.io"
    resources:
      - prowjobs
    verbs:
      - get
      - list
      - watch
      # Required when deck runs with `--rerun-creates-job=true`
      # **Warning:** Only use this for non-public deck instances, this allows
      # anyone with access to your Deck instance to create new Prowjobs
      # - create
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: test-pods
  name: "deck"
rules:
  - apiGroups:
      - ""
    resources:
      - pods/log
    verbs:
      - get
---
kind: ServiceAccount
apiVersion: v1
metadata:
  namespace: prow
  name: "horologium"
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: prow
  name: "horologium"
rules:
  - apiGroups:
      - "prow.k8s.io"
    resources:
      - prowjobs
    verbs:
      - create
      - list
      - watch
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: prow
  name: "horologium"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: "horologium"
subjects:
  - kind: ServiceAccount
    name: "horologium"
---
kind: ServiceAccount
apiVersion: v1
metadata:
  namespace: prow
  name: "sinker"
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: prow
  name: "sinker"
rules:
  - apiGroups:
      - "prow.k8s.io"
    resources:
      - prowjobs
    verbs:
      - delete
      - list
      - watch
      - get
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    resourceNames:
      - prow-sinker-leaderlock
    verbs:
      - get
      - update
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - configmaps
    resourceNames:
      - prow-sinker-leaderlock
    verbs:
      - get
      - update
  - apiGroups:
      - ""
    resources:
      - configmaps
      - events
    verbs:
      - create
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: test-pods
  name: "sinker"
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - delete
      - list
      - watch
      - get
      - patch
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: prow
  name: "sinker"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: "sinker"
subjects:
  - kind: ServiceAccount
    name: "sinker"
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: test-pods
  name: "sinker"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: "sinker"
subjects:
  - kind: ServiceAccount
    name: "sinker"
    namespace: prow
---
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: prow
  name: "hook"
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: prow
  name: "hook"
rules:
  - apiGroups:
      - "prow.k8s.io"
    resources:
      - prowjobs
    verbs:
      - create
      - get
      - list
      - update
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
      - get
      - update
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: prow
  name: "hook"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: "hook"
subjects:
  - kind: ServiceAccount
    name: "hook"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: prow
  name: "tide"
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: prow
  name: "tide"
rules:
  - apiGroups:
      - "prow.k8s.io"
    resources:
      - prowjobs
    verbs:
      - create
      - list
      - get
      - watch
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: prow
  name: "tide"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: "tide"
subjects:
  - kind: ServiceAccount
    name: "tide"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: prow
  name: "statusreconciler"
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: prow
  name: "statusreconciler"
rules:
  - apiGroups:
      - "prow.k8s.io"
    resources:
      - prowjobs
    verbs:
      - create
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: prow
  name: "statusreconciler"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: "statusreconciler"
subjects:
  - kind: ServiceAccount
    name: "statusreconciler"
--- # ghproxy 持久存储
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  namespace: prow
  labels:
    app: ghproxy
  name: ghproxy
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
--- # ghproxy 组件
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: prow
  name: ghproxy
  labels:
    app: ghproxy
spec:
  selector:
    matchLabels:
      app: ghproxy
  strategy:
    type: Recreate
  replicas: 1 # GHProxy does not support HA
  template:
    metadata:
      labels:
        app: ghproxy
    spec:
      containers:
        - name: ghproxy
          image: gcr.io/k8s-prow/ghproxy:v20211111-bce61c7c4a
          args:
            - --cache-dir=/cache
            - --cache-sizeGB=99
            - --push-gateway=pushgateway
            - --serve-metrics=true
            - --legacy-disable-disk-cache-partitions-by-auth-header=false
          ports:
            - containerPort: 8888
          volumeMounts:
            - name: cache
              mountPath: /cache
      volumes:
        - name: cache
          persistentVolumeClaim:
            claimName: ghproxy
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: ghproxy
  namespace: prow
  name: ghproxy
spec:
  selector:
    app: ghproxy
  type: ClusterIP
  ports:
    - name: main
      port: 80
      protocol: TCP
      targetPort: 8888
    - name: metrics
      port: 9090
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: prow
  name: prow-controller-manager
  labels:
    app: prow-controller-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prow-controller-manager
  template:
    metadata:
      labels:
        app: prow-controller-manager
    spec:
      serviceAccountName: prow-controller-manager
      containers:
        - name: prow-controller-manager
          args:
            - --dry-run=false
            - --config-path=/etc/config/config.yaml
            - --job-config-path=/etc/job-config
            - --github-token-path=/etc/github/oauth
            - --github-endpoint=http://ghproxy
            - --github-endpoint=https://api.github.com
            - --enable-controller=plank
          image: gcr.io/k8s-prow/prow-controller-manager:v20211111-bce61c7c4a
          volumeMounts:
            - name: oauth
              mountPath: /etc/github
              readOnly: true
            - name: config
              mountPath: /etc/config
              readOnly: true
            - name: job-config
              mountPath: /etc/job-config
              readOnly: true
      volumes:
        - name: oauth
          secret:
            secretName: oauth-token
        - name: config
          configMap:
            name: config
        - name: job-config
          configMap:
            name: job-config
---
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: prow
  name: prow-controller-manager
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: prow
  name: prow-controller-manager
rules:
  - apiGroups:
      - "prow.k8s.io"
    resources:
      - prowjobs
    verbs:
      - get
      - list
      - watch
      - update
      - patch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    resourceNames:
      - prow-controller-manager-leader-lock
    verbs:
      - get
      - update
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - configmaps
    resourceNames:
      - prow-controller-manager-leader-lock
    verbs:
      - get
      - update
  - apiGroups:
      - ""
    resources:
      - configmaps
      - events
    verbs:
      - create
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: test-pods
  name: prow-controller-manager
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - delete
      - list
      - watch
      - create
      - patch
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: prow
  name: prow-controller-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: prow-controller-manager
subjects:
  - kind: ServiceAccount
    name: prow-controller-manager
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: test-pods
  name: prow-controller-manager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: prow-controller-manager
subjects:
  - kind: ServiceAccount
    name: prow-controller-manager
    namespace: prow
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: prow
  name: crier
  labels:
    app: crier
spec:
  replicas: 1
  selector:
    matchLabels:
      app: crier
  template:
    metadata:
      labels:
        app: crier
    spec:
      serviceAccountName: crier
      terminationGracePeriodSeconds: 30
      containers:
        - name: crier
          image: gcr.io/k8s-prow/crier:v20211111-bce61c7c4a
          ports:
            - name: metrics
              containerPort: 9090
          args:
            - --blob-storage-workers=10
            - --config-path=/etc/config/config.yaml
            - --job-config-path=/etc/job-config
            - --s3-credentials-file=/etc/s3-credentials/service-account.json
            - --github-endpoint=http://ghproxy
            - --github-endpoint=https://api.github.com
            - --github-token-path=/etc/github/oauth
            - --github-workers=10
            - --kubernetes-blob-storage-workers=10
          volumeMounts:
            - name: config
              mountPath: /etc/config
              readOnly: true
            - name: job-config
              mountPath: /etc/job-config
              readOnly: true
            - name: oauth
              mountPath: /etc/github
              readOnly: true
            - name: s3-credentials
              mountPath: /etc/s3-credentials
              readOnly: true
      volumes:
        - name: config
          configMap:
            name: config
        - name: job-config
          configMap:
            name: job-config
        - name: oauth
          secret:
            secretName: oauth-token
        - name: s3-credentials
          secret:
            secretName: s3-credentials
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: crier
  namespace: prow
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: prow
  name: crier
rules:
  - apiGroups:
      - "prow.k8s.io"
    resources:
      - "prowjobs"
    verbs:
      - "get"
      - "watch"
      - "list"
      - "patch"
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: test-pods
  name: crier
rules:
  - apiGroups:
      - ""
    resources:
      - "pods"
      - "events"
    verbs:
      - "get"
      - "list"
  - apiGroups:
      - ""
    resources:
      - "pods"
    verbs:
      - "patch"
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: crier
  namespace: prow
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: crier
subjects:
  - kind: ServiceAccount
    name: crier
    namespace: prow
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: crier
  namespace: test-pods
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: crier
subjects:
  - kind: ServiceAccount
    name: crier
    namespace: prow

---
apiVersion: v1
kind: Secret
metadata:
  namespace: prow
  name: s3-credentials
stringData:
  service-account.json: |
    {
      "region": "ap-northeast-1"
    }
---
apiVersion: v1
kind: Secret
metadata:
  namespace: test-pods
  name: s3-credentials
stringData:
  service-account.json: |
    {
      "region": "ap-northeast-1"
    }
